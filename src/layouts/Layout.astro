---
import '../assets/css/app.css'

export interface Props {
	title?: string;
	description?: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="zh-CN" class="h-full bg-gray-50 dark:bg-gray-900 eye-care:bg-[var(--eye-care-bg)]">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		<title>{title || 'TabTab'}</title>
		{description && <meta name="description" content={description} />}
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
	</head>
	<body class="h-full font-sans text-gray-900 dark:text-gray-100">
		<div class="min-h-full">
			<!-- 简洁导航栏 -->
			<header class="bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-800">
				<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
					<div class="flex justify-between items-center h-14 md:px-4">
						<!-- Logo -->
						<a href="/" class="text-xl font-semibold text-gray-900 dark:text-gray-100">
							王子肥波
						</a>

						<!-- 桌面端导航 -->
						<nav class="hidden md:flex items-center space-x-8">
							<a href="/" class="text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100">
								首页
							</a>
							<a href="/blog" class="text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100">
								博客
							</a>
							<a href="/shuo-shuo" class="text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100">
								说说
							</a>
							<!-- 主题选择下拉 -->
						<div class="relative ">
							<button type="button" class="theme-dropdown-btn flex items-center space-x-1.5 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100 px-2.5 py-1.5 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors" id="theme-dropdown">
								<span id="current-theme-icon" class="w-4 h-4">
									<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
									</svg>
								</span>
								<span class="hidden sm:inline">主题</span>
							</button>
							<div class="absolute right-0 mt-1.5 w-32 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-md shadow-lg hidden py-0.5 z-50" id="theme-menu">
								<button data-theme="light" class="theme-option w-full text-left px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center space-x-2 transition-colors">
									<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
									</svg>
									<span>浅色</span>
								</button>
								<button data-theme="dark" class="theme-option w-full text-left px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center space-x-2 transition-colors">
									<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
									</svg>
									<span>暗黑</span>
								</button>
								<button data-theme="eye-care" class="theme-option w-full text-left px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center space-x-2 transition-colors">
									<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
									</svg>
									<span>护眼</span>
								</button>
							</div>
						</div>
						</nav>

						<!-- 移动端菜单按钮 -->
						<button type="button" class="md:hidden p-2 text-gray-600 dark:text-gray-400" id="mobile-menu-button">
							<svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M4 6h16M4 12h16M4 18h16" />
							</svg>
						</button>
					</div>

					<!-- 移动端菜单 -->
						<div class="md:hidden hidden border-t border-gray-200 dark:border-gray-800" id="mobile-menu">
							<div class="px-4 py-2 space-y-1">
								<a href="/" class="block px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300">
									首页
								</a>
								<a href="/blog" class="block px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300">
									博客
								</a>
								<a href="/shuo-shuo" class="block px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300">
									说说
								</a>
							<!-- 移动端主题选择 -->
							<div class="pt-3 border-t border-gray-200 dark:border-gray-800">
								<p class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 px-3">主题</p>
								<select id="mobile-theme-select" class="w-full px-3 py-2 text-sm bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-300 dark:focus:ring-gray-600">
								<option value="light">浅色</option>
								<option value="dark">暗黑</option>
								<option value="eye-care">护眼</option>
							</select>
							</div>
						</div>
					</div>
				</div>
			</header>

			<!-- 主要内容 -->
			<main class="max-w-7xl mx-auto pt-8 pb-6 px-6 sm:px-8 lg:px-10">
				<slot />
			</main>

			<!-- 精简页脚 -->
			<footer class="border-t border-gray-200 dark:border-gray-800 bg-gray-50 dark:bg-gray-900 eye-care:bg-[var(--eye-care-bg)]">
				<div class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
					<div class="text-center">
						<div class="flex justify-center space-x-6 mb-4">
							<a href="/" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200">首页</a>
							<a href="/blog" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200">博客</a>
							<a href="/shuo-shuo" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200">说说</a>
			 
						</div>
						<p class="text-sm text-gray-600 dark:text-gray-400">
							&copy; <span id="current-year"> </span> 王子肥波. 保留所有权利。
						</p>
					</div>
				</div>
			</footer>
		</div>
		<!-- 主题切换脚本 -->
		<script>
			// 主题管理
			class ThemeManager {
				constructor() {
					this.themes = {
						light: 'light',
						dark: 'dark',
						'eye-care': 'eye-care'
					};
					this.init();
				}

				init() {
					// 从本地存储获取主题，或使用系统偏好
					const savedTheme = localStorage.getItem('theme') || this.getSystemTheme();
					this.setTheme(savedTheme as 'light' | 'dark' | 'eye-care');
					this.setupEventListeners();
				}

				getSystemTheme() {
					// 检查系统主题偏好
					if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
						return 'dark';
					}
					return 'light';
				}

				setTheme(theme: 'light' | 'dark' | 'eye-care') {
					const html = document.documentElement;
					
					// 移除所有主题类
					Object.values(this.themes).forEach(className => {
						html.classList.remove(className as string);
					});

					// 移除暗黑模式的类
					html.classList.remove('dark');

					// 添加新主题类
					html.classList.add(theme);
					
					// 如果选择的是暗黑模式，同时添加dark类
					if (theme === 'dark') {
						html.classList.add('dark');
					}

					localStorage.setItem('theme', theme);

					// 更新主题图标
					this.updateThemeIcon(theme);
					
					// 更新选中状态
					this.updateSelectedTheme(theme);
					
					// 更新移动端下拉选择框
					const mobileSelect = document.getElementById('mobile-theme-select');
					if (mobileSelect) {
						mobileSelect.value = theme;
					}
				}

				updateThemeIcon(theme: 'light' | 'dark' | 'eye-care') {
					const iconContainer = document.getElementById('current-theme-icon');
					if (!iconContainer) return;

					const icons = {
						light: '<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" /></svg>',
						dark: '<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" /></svg>',
						'eye-care': '<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" /><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" /></svg>'
					};

					iconContainer.innerHTML = icons[theme as keyof typeof icons] || icons.light;
				}

				setupEventListeners() {
					// 桌面端下拉菜单
					const themeDropdown = document.getElementById('theme-dropdown');
					const themeMenu = document.getElementById('theme-menu');

					if (themeDropdown && themeMenu) {
						themeDropdown.addEventListener('click', (e) => {
							e.stopPropagation();
							themeMenu.classList.toggle('hidden');
						});

						// 主题菜单项点击
						themeMenu.querySelectorAll('[data-theme]').forEach(button => {
							button.addEventListener('click', (e) => {
								e.preventDefault();
								const theme = button.getAttribute('data-theme');
								this.setTheme(theme as 'light' | 'dark' | 'eye-care');
								themeMenu.classList.add('hidden');
							});
						});

						// 点击外部关闭下拉菜单
						document.addEventListener('click', () => {
							themeMenu.classList.add('hidden');
						});
					}

					// 移动端下拉选择框
					const mobileSelect = document.getElementById('mobile-theme-select');
					if (mobileSelect) {
						mobileSelect.addEventListener('change', (e) => {
							const target = e.target as HTMLSelectElement;
							if (target) {
								this.setTheme(target.value as 'light' | 'dark' | 'eye-care');
							}
						});
					}

					// 监听系统主题变化
					if (window.matchMedia) {
						window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
							if (!localStorage.getItem('theme')) {
								this.setTheme(e.matches ? 'dark' : 'light');
							}
						});
					}
					
					// 初始化选中状态
					const savedTheme = localStorage.getItem('theme') || this.getSystemTheme();
					this.updateSelectedTheme(savedTheme as 'light' | 'dark' | 'eye-care');
					
					// 添加选中状态样式
					const style = document.createElement('style');
					style.textContent = `
						.theme-option.active {
							background-color: rgb(243 244 246);
							color: rgb(17 24 39);
							font-weight: 500;
						}
						.dark .theme-option.active {
							background-color: rgb(31 41 55);
							color: rgb(243 244 246);
						}
						.theme-option.active svg {
							color: rgb(59 130 246);
						}
						.dark .theme-option.active svg {
							color: rgb(59 130 246);
						}
					`;
					document.head.appendChild(style);
				}
				
				updateSelectedTheme(theme: 'light' | 'dark' | 'eye-care') {
					// 移除所有选中状态
					document.querySelectorAll('.theme-option').forEach(option => {
						option.classList.remove('active');
					});
					
					// 添加选中状态到当前主题
					const activeOption = document.querySelector(`.theme-option[data-theme="${theme}"]`);
					if (activeOption) {
						activeOption.classList.add('active');
					}
				}
			}

			// 初始化主题管理器
			const themeManager = new ThemeManager();

			// 动态更新版权年份
			const currentYearSpan = document.getElementById('current-year');
			if (currentYearSpan) {
				currentYearSpan.textContent = new Date().getFullYear().toString();
			}

			// 简约导航脚本
			const mobileMenuButton = document.getElementById('mobile-menu-button');
			const mobileMenu = document.getElementById('mobile-menu');

			if (mobileMenuButton && mobileMenu) {
				// 切换移动端菜单
				mobileMenuButton.addEventListener('click', () => {
					mobileMenu.classList.toggle('hidden');
				});

				// 点击外部关闭菜单
				document.addEventListener('click', (event) => {
					if (!mobileMenuButton.contains(event.target as Node) && !mobileMenu.contains(event.target as Node)) {
						mobileMenu.classList.add('hidden');
					}
				});

				// 窗口大小变化时重置
				window.addEventListener('resize', () => {
					if (window.innerWidth >= 768) {
						mobileMenu.classList.add('hidden');
					}
				});
			}
		</script>
	</body>
</html>